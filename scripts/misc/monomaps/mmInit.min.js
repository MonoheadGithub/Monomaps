async function init(){try{if(monomapMarkers||(monomapMarkers=[],localStorage.setItem("monomapMarkers",JSON.stringify(monomapMarkers)),mmAlert({name:"MonomapMarkers",message:"No default monomap markers, setting...",type:"info"})),mmAlert({name:"Monomaps Initialize",message:"Starting Initialization",type:"success"}),console.groupCollapsed("Additional Initialization Output"),localStorage.getItem("filterSettings")){mmAlert({name:"Monomaps Config - filterSettings",message:"filterSettings found.",type:"success"}),mmAlert({name:"Monomaps Config - filterSettings",message:"Loading Monomap Markers",type:"success"}),load_markers(),mmAlert({name:"Monomaps Config - filterSettings",message:"Filtering the markers based on filterSettings.",type:"success"});let e=JSON.parse(localStorage.getItem("filterSettings"));!1===e.premiumMarkers&&hide("Premium"),!1===e.resourceMarkers&&hide("Resource"),!1===e.publicMarkers&&hide("Public"),!1===e.governmentMarkers&&hide("Government"),!1===e.rentableMarkers&&hide("Rentable"),!1===e.illegalMarkers&&hide("Illegal"),!1===e.shopMarkers&&hide("Shop"),!1===e.customMarkers&&hide("Custom"),!1===e.eventMarkers&&hide("Event")}else{mmAlert({title:"Monomaps Config - filterSettings",message:"Configuration not found, generating..",type:"warning"}),console.time("filterSettingsGenerationTime");let e={premiumMarkers:!0,resourceMarkers:!0,publicMarkers:!0,governmentMarkers:!0,rentableMarkers:!0,illegalMarkers:!0,shopMarkers:!0,customMarkers:!0,eventMarkers:!0};localStorage.setItem("filterSettings",JSON.stringify(e)),console.timeEnd("filterSettingsGenerationTime"),mmAlert({name:"Monomaps Config - filterSettings",message:"Generated filterSettings to default.",type:"warning"}),load_markers()}themeMode?"Modern"===themeMode?(document.head.insertAdjacentHTML("afterbegin",'<link rel="stylesheet" href="./stylesheets/monomaps/MonomapsModern.min.css">'),mmAlert({name:"Monomaps Config - themeMode",message:"themeMode found. [Modern]",type:"success"})):(document.head.insertAdjacentHTML("afterbegin",'<link rel="stylesheet" href="./stylesheets/monomaps/MonomapsModern.min.css">'),mmAlert({name:"Monomaps Config - themeMode",message:"themeMode found but unknown value provided, using Modern instead.",type:"error",ui:!0,timeOut:1e4}),localStorage.setItem("themeMode","Modern")):(mmAlert({name:"Monomaps Config - themeMode",message:"Configuration not found, generating..",type:"warning"}),localStorage.setItem("themeMode","Modern"),document.head.insertAdjacentHTML("afterbegin",'<link rel="stylesheet" href="./stylesheets/monomaps/MonomapsModern.min.css">'),mmAlert({name:"Monomaps Config - themeMode",message:"Generated themeMode to Modern",type:"success"})),mapMode?"Southside"===mapMode?(localStorage.setItem("mapMode","Paralake"),localStorage.setItem("timeMode","Layer1"),window.location.reload()):"Monoford"===mapMode?(localStorage.setItem("mapMode","Paralake"),localStorage.setItem("timeMode","Layer1"),window.location.reload()):"Paralake"===mapMode&&(document.getElementById("monomaps-maps-maparea").style.background='url("./assets/monomaps/backgrounds/paralake.png")',mapareaSize(2048),document.getElementById("mapInfo").innerHTML="Paralake by Perpheads"):(localStorage.setItem("mapMode","Paralake"),window.location.reload()),timeMode?"Southside"===mapMode?localStorage.setItem("timeMode","Layer1"):"Monoford"===mapMode?localStorage.setItem("timeMode","Layer1"):"Paralake"===mapMode&&"Layer1"===timeMode&&(document.getElementById("monomaps-maps-maparea").style.background="url('./assets/monomaps/backgrounds/paralake.png')",mapareaSize(2048)):localStorage.setItem("timeMode","Layer1"),showPreview?mmAlert({name:"Monomaps Config - showPreview",message:"showPreview found.",type:"success"}):(mmAlert({name:"Monomaps Config - showPreview",message:"Configuration not found, generating..",type:"warning"}),localStorage.setItem("showPreview","true"),reloadMarkers(),mmAlert({name:"Monomaps Config - showPreview",message:"Generated showPreview to default",type:"success"})),localStorage.getItem("dnotif")||localStorage.setItem("dnotif","disabled"),localStorage.getItem("mmZoom")||localStorage.setItem("mmZoom","true"),console.groupEnd(),mmAlert({name:"Monomaps Initialize",message:"Finished.",type:"success"}),document.getElementById("monomaps-maps-maparea").style.display="block"}catch(e){mmAlert({name:"Monomaps",message:"Error detected, terminating Initialization.",type:"error"}),console.groupEnd(),document.getElementById("monomaps-maps-maparea").style.display="none",mmAlert({name:"Monomaps Initialize Error",message:e,type:"error"}),mmAlert({name:"Monomaps Initialize Error",message:"Monomaps ran across a problem, check console.",type:"error",ui:!0,dialog:!0})}}